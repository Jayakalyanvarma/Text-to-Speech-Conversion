import boto3

In this usage, boto3.client() is a method that creates a low-level client for a specific AWS service. It's commonly used to interact with AWS services at a low level, providing direct access to the underlying API.

s3 = boto3.client('s3')
polly = boto3.client('polly')

def lambda_handler(event, context):
    try:
        #This line extracts the name of the S3 bucket from the event data.
        bucket = event['Records'][0]['s3']['bucket']['name']
        #key = event['Records'][0]['s3']['object']['key']: This line extracts the key (i.e., the path) of the object within the S3 bucket         from the event data.
        key = event['Records'][0]['s3']['object']['key']
        
        # Download the text file from S3
        response = s3.get_object(Bucket=bucket, Key=key)
        text = response['Body'].read().decode('utf-8')
        
        # Convert text to speech using Polly
        response = polly.synthesize_speech(Text=text, OutputFormat='mp3', VoiceId='Joanna')
        
        # Upload generated speech to S3
        speech_key = key.split('.')[0] + '.mp3'  # Change the extension to mp3
        s3.put_object(Bucket='your-audio-bucket', Key=speech_key, Body=response['AudioStream'].read())
        
        return {
            'statusCode': 200,
            'body': 'Speech file generated successfully'
        }
    except Exception as e:
        return {
            'statusCode': 500,
            'body': str(e)
        }
